
/*
 * This file was generated by the SOM Compiler.
 * FileName: candyfld.ih.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emitih: 2.42
 */

/*
 * 
 * CandyFld.idl:
 * 
 * This file is (C) Chris Wohlgemuth 2001
 * It is part of the CandyFolder package
 * 
 * Visit
 * 
 * http://candybarz.netlabs.org
 * 
 * or
 * 
 * http://www.geocities.com/SiliconValley/Sector/5785/
 * 
 * for more information
 * 
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; see the file COPYING.  If not, write to
 * the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 */


/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_CandyFolder_ih
#define SOM_CandyFolder_ih

#pragma checkout(suspend)

#include <candyfld.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass CandyFolderCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define CandyFolder_MaxNoMethods 1

/*
 * -- Instance data
 */
typedef struct {
	ULONG ulBackgroundPageID;
	ULONG ulTransPageID;
	ULONG ulTrans;
	ULONG ulHaveToSave;
	HBITMAP hbmBG;
	ULONG ulRed;
	ULONG ulGreen;
	ULONG ulBlue;
} CandyFolderData;

/*
 * GetData macro
 */

/*
 * -- This emitter treats Data Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to override this default.
 */
typedef CandyFolderData* SOMLINK somTP_CandyFolder_DataThunk(void*);
#ifdef __IBMC__
#pragma linkage(somTP_CandyFolder_DataThunk, system)
#endif
typedef somTP_CandyFolder_DataThunk *somTD_CandyFolder_DataThunk;

#define CandyFolderGetData(somSelf) \
   (((somTD_CandyFolder_DataThunk)(CandyFolderCClassData.instanceDataToken))(somSelf))

/*
 * Instance variable and staticdata access macros
 */
#ifndef NO_VARIABLE_MACROS
#define _ulBackgroundPageID (somThis->ulBackgroundPageID)
#define _ulTransPageID (somThis->ulTransPageID)
#define _ulTrans (somThis->ulTrans)
#define _ulHaveToSave (somThis->ulHaveToSave)
#define _hbmBG (somThis->hbmBG)
#define _ulRed (somThis->ulRed)
#define _ulGreen (somThis->ulGreen)
#define _ulBlue (somThis->ulBlue)
#endif

/*
 * Primary Implementation File Support
 */
#if (defined(CandyFolder_Class_Source) || defined(SOM_Module_candyfld_Source))

/*
 * Trace/Debug macro
 */
#ifndef CandyFolderMethodDebug
   #define CandyFolderMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* CandyFolderMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_CandyFolderCClassData.parentMtab
#undef SOMInstance
#define SOMInstance CandyFolderCClassData.parentMtab

#ifndef M_CandyFolder_Class_Source
   #define M_CandyFolder_Class_Source
#endif    /* M_CandyFolder_Class_Source */

/*
 * Overridden method: wpAddFolderBackgroundPage
 */
#pragma linkage(candyfolder_wpAddFolderBackgroundPage, system)
SOM_Scope ULONG  SOMLINK candyfolder_wpAddFolderBackgroundPage(CandyFolder *somSelf,
		HWND hwndNotebook);
static char *somMN_CandyFolderwpAddFolderBackgroundPage = "WPFolder::wpAddFolderBackgroundPage";
static somId somId_CandyFolderwpAddFolderBackgroundPage = &somMN_CandyFolderwpAddFolderBackgroundPage;
#ifdef somId_wpAddFolderBackgroundPage
#undef somId_wpAddFolderBackgroundPage
#else
#define somId_wpAddFolderBackgroundPage somId_CandyFolderwpAddFolderBackgroundPage
#endif
static somMethodProc* CandyFolder_parent_WPFolder_wpAddFolderBackgroundPage_resolved;
#define CandyFolder_parent_WPFolder_wpAddFolderBackgroundPage(somSelf,hwndNotebook) \
  ((( somTD_WPFolder_wpAddFolderBackgroundPage ) \
    CandyFolder_parent_WPFolder_wpAddFolderBackgroundPage_resolved) \
	 (somSelf,hwndNotebook))
#ifndef SOMGD_pmc_WPFolder_wpAddFolderBackgroundPage
  #ifdef parent_WPFolder_wpAddFolderBackgroundPage
     #undef parent_WPFolder_wpAddFolderBackgroundPage
     #define SOMGD_pmc_WPFolder_wpAddFolderBackgroundPage 1
  #else
     #define parent_WPFolder_wpAddFolderBackgroundPage CandyFolder_parent_WPFolder_wpAddFolderBackgroundPage
  #endif /* parent_WPFolder_wpAddFolderBackgroundPage */
#endif /* SOMGD_pmc_WPFolder_wpAddFolderBackgroundPage */
#ifndef parent_wpAddFolderBackgroundPage
     #define parent_wpAddFolderBackgroundPage CandyFolder_parent_WPFolder_wpAddFolderBackgroundPage
#endif  /* parent_wpAddFolderBackgroundPage */
#define CandyFolder_parents_wpAddFolderBackgroundPage(somSelf,hwndNotebook) (\
   CandyFolder_parent_WPFolder_wpAddFolderBackgroundPage(somSelf,hwndNotebook))

/*
 * Overridden method: wpOpen
 */
#pragma linkage(candyfolder_wpOpen, system)
SOM_Scope HWND  SOMLINK candyfolder_wpOpen(CandyFolder *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
static char *somMN_CandyFolderwpOpen = "WPObject::wpOpen";
static somId somId_CandyFolderwpOpen = &somMN_CandyFolderwpOpen;
#ifdef somId_wpOpen
#undef somId_wpOpen
#else
#define somId_wpOpen somId_CandyFolderwpOpen
#endif
static somMethodProc* CandyFolder_parent_WPFolder_wpOpen_resolved;
#define CandyFolder_parent_WPFolder_wpOpen(somSelf,hwndCnr,ulView,param) \
  ((( somTD_WPObject_wpOpen ) \
    CandyFolder_parent_WPFolder_wpOpen_resolved) \
	 (somSelf,hwndCnr,ulView,param))
#ifndef SOMGD_pmc_WPFolder_wpOpen
  #ifdef parent_WPFolder_wpOpen
     #undef parent_WPFolder_wpOpen
     #define SOMGD_pmc_WPFolder_wpOpen 1
  #else
     #define parent_WPFolder_wpOpen CandyFolder_parent_WPFolder_wpOpen
  #endif /* parent_WPFolder_wpOpen */
#endif /* SOMGD_pmc_WPFolder_wpOpen */
#ifndef parent_wpOpen
     #define parent_wpOpen CandyFolder_parent_WPFolder_wpOpen
#endif  /* parent_wpOpen */
#define CandyFolder_parents_wpOpen(somSelf,hwndCnr,ulView,param) (\
   CandyFolder_parent_WPFolder_wpOpen(somSelf,hwndCnr,ulView,param))

/*
 * Overridden method: wpDeleteFromObjUseList
 */
#pragma linkage(candyfolder_wpDeleteFromObjUseList, system)
SOM_Scope BOOL  SOMLINK candyfolder_wpDeleteFromObjUseList(CandyFolder *somSelf,
		PUSEITEM pUseItem);
static char *somMN_CandyFolderwpDeleteFromObjUseList = "WPObject::wpDeleteFromObjUseList";
static somId somId_CandyFolderwpDeleteFromObjUseList = &somMN_CandyFolderwpDeleteFromObjUseList;
#ifdef somId_wpDeleteFromObjUseList
#undef somId_wpDeleteFromObjUseList
#else
#define somId_wpDeleteFromObjUseList somId_CandyFolderwpDeleteFromObjUseList
#endif
static somMethodProc* CandyFolder_parent_WPFolder_wpDeleteFromObjUseList_resolved;
#define CandyFolder_parent_WPFolder_wpDeleteFromObjUseList(somSelf,pUseItem) \
  ((( somTD_WPObject_wpDeleteFromObjUseList ) \
    CandyFolder_parent_WPFolder_wpDeleteFromObjUseList_resolved) \
	 (somSelf,pUseItem))
#ifndef SOMGD_pmc_WPFolder_wpDeleteFromObjUseList
  #ifdef parent_WPFolder_wpDeleteFromObjUseList
     #undef parent_WPFolder_wpDeleteFromObjUseList
     #define SOMGD_pmc_WPFolder_wpDeleteFromObjUseList 1
  #else
     #define parent_WPFolder_wpDeleteFromObjUseList CandyFolder_parent_WPFolder_wpDeleteFromObjUseList
  #endif /* parent_WPFolder_wpDeleteFromObjUseList */
#endif /* SOMGD_pmc_WPFolder_wpDeleteFromObjUseList */
#ifndef parent_wpDeleteFromObjUseList
     #define parent_wpDeleteFromObjUseList CandyFolder_parent_WPFolder_wpDeleteFromObjUseList
#endif  /* parent_wpDeleteFromObjUseList */
#define CandyFolder_parents_wpDeleteFromObjUseList(somSelf,pUseItem) (\
   CandyFolder_parent_WPFolder_wpDeleteFromObjUseList(somSelf,pUseItem))

/*
 * Overridden method: wpSaveState
 */
#pragma linkage(candyfolder_wpSaveState, system)
SOM_Scope BOOL  SOMLINK candyfolder_wpSaveState(CandyFolder *somSelf);
static char *somMN_CandyFolderwpSaveState = "WPObject::wpSaveState";
static somId somId_CandyFolderwpSaveState = &somMN_CandyFolderwpSaveState;
#ifdef somId_wpSaveState
#undef somId_wpSaveState
#else
#define somId_wpSaveState somId_CandyFolderwpSaveState
#endif
static somMethodProc* CandyFolder_parent_WPFolder_wpSaveState_resolved;
#define CandyFolder_parent_WPFolder_wpSaveState(somSelf) \
  ((( somTD_WPObject_wpSaveState ) \
    CandyFolder_parent_WPFolder_wpSaveState_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_WPFolder_wpSaveState
  #ifdef parent_WPFolder_wpSaveState
     #undef parent_WPFolder_wpSaveState
     #define SOMGD_pmc_WPFolder_wpSaveState 1
  #else
     #define parent_WPFolder_wpSaveState CandyFolder_parent_WPFolder_wpSaveState
  #endif /* parent_WPFolder_wpSaveState */
#endif /* SOMGD_pmc_WPFolder_wpSaveState */
#ifndef parent_wpSaveState
     #define parent_wpSaveState CandyFolder_parent_WPFolder_wpSaveState
#endif  /* parent_wpSaveState */
#define CandyFolder_parents_wpSaveState(somSelf) (\
   CandyFolder_parent_WPFolder_wpSaveState(somSelf))

/*
 * Overridden method: wpRestoreState
 */
#pragma linkage(candyfolder_wpRestoreState, system)
SOM_Scope BOOL  SOMLINK candyfolder_wpRestoreState(CandyFolder *somSelf,
		ULONG ulReserved);
static char *somMN_CandyFolderwpRestoreState = "WPObject::wpRestoreState";
static somId somId_CandyFolderwpRestoreState = &somMN_CandyFolderwpRestoreState;
#ifdef somId_wpRestoreState
#undef somId_wpRestoreState
#else
#define somId_wpRestoreState somId_CandyFolderwpRestoreState
#endif
static somMethodProc* CandyFolder_parent_WPFolder_wpRestoreState_resolved;
#define CandyFolder_parent_WPFolder_wpRestoreState(somSelf,ulReserved) \
  ((( somTD_WPObject_wpRestoreState ) \
    CandyFolder_parent_WPFolder_wpRestoreState_resolved) \
	 (somSelf,ulReserved))
#ifndef SOMGD_pmc_WPFolder_wpRestoreState
  #ifdef parent_WPFolder_wpRestoreState
     #undef parent_WPFolder_wpRestoreState
     #define SOMGD_pmc_WPFolder_wpRestoreState 1
  #else
     #define parent_WPFolder_wpRestoreState CandyFolder_parent_WPFolder_wpRestoreState
  #endif /* parent_WPFolder_wpRestoreState */
#endif /* SOMGD_pmc_WPFolder_wpRestoreState */
#ifndef parent_wpRestoreState
     #define parent_wpRestoreState CandyFolder_parent_WPFolder_wpRestoreState
#endif  /* parent_wpRestoreState */
#define CandyFolder_parents_wpRestoreState(somSelf,ulReserved) (\
   CandyFolder_parent_WPFolder_wpRestoreState(somSelf,ulReserved))

/*
 * Overridden method: wpSaveString
 */
#pragma linkage(candyfolder_wpSaveString, system)
SOM_Scope BOOL  SOMLINK candyfolder_wpSaveString(CandyFolder *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue);
static char *somMN_CandyFolderwpSaveString = "WPObject::wpSaveString";
static somId somId_CandyFolderwpSaveString = &somMN_CandyFolderwpSaveString;
#ifdef somId_wpSaveString
#undef somId_wpSaveString
#else
#define somId_wpSaveString somId_CandyFolderwpSaveString
#endif
static somMethodProc* CandyFolder_parent_WPFolder_wpSaveString_resolved;
#define CandyFolder_parent_WPFolder_wpSaveString(somSelf,pszClass,ulKey,pszValue) \
  ((( somTD_WPObject_wpSaveString ) \
    CandyFolder_parent_WPFolder_wpSaveString_resolved) \
	 (somSelf,pszClass,ulKey,pszValue))
#ifndef SOMGD_pmc_WPFolder_wpSaveString
  #ifdef parent_WPFolder_wpSaveString
     #undef parent_WPFolder_wpSaveString
     #define SOMGD_pmc_WPFolder_wpSaveString 1
  #else
     #define parent_WPFolder_wpSaveString CandyFolder_parent_WPFolder_wpSaveString
  #endif /* parent_WPFolder_wpSaveString */
#endif /* SOMGD_pmc_WPFolder_wpSaveString */
#ifndef parent_wpSaveString
     #define parent_wpSaveString CandyFolder_parent_WPFolder_wpSaveString
#endif  /* parent_wpSaveString */
#define CandyFolder_parents_wpSaveString(somSelf,pszClass,ulKey,pszValue) (\
   CandyFolder_parent_WPFolder_wpSaveString(somSelf,pszClass,ulKey,pszValue))

/*
 * Overridden method: wpRestoreString
 */
#pragma linkage(candyfolder_wpRestoreString, system)
SOM_Scope BOOL  SOMLINK candyfolder_wpRestoreString(CandyFolder *somSelf,
		PSZ pszClass,
		ULONG ulKey,
		PSZ pszValue,
		PULONG pcbValue);
static char *somMN_CandyFolderwpRestoreString = "WPObject::wpRestoreString";
static somId somId_CandyFolderwpRestoreString = &somMN_CandyFolderwpRestoreString;
#ifdef somId_wpRestoreString
#undef somId_wpRestoreString
#else
#define somId_wpRestoreString somId_CandyFolderwpRestoreString
#endif
static somMethodProc* CandyFolder_parent_WPFolder_wpRestoreString_resolved;
#define CandyFolder_parent_WPFolder_wpRestoreString(somSelf,pszClass,ulKey,pszValue,pcbValue) \
  ((( somTD_WPObject_wpRestoreString ) \
    CandyFolder_parent_WPFolder_wpRestoreString_resolved) \
	 (somSelf,pszClass,ulKey,pszValue,pcbValue))
#ifndef SOMGD_pmc_WPFolder_wpRestoreString
  #ifdef parent_WPFolder_wpRestoreString
     #undef parent_WPFolder_wpRestoreString
     #define SOMGD_pmc_WPFolder_wpRestoreString 1
  #else
     #define parent_WPFolder_wpRestoreString CandyFolder_parent_WPFolder_wpRestoreString
  #endif /* parent_WPFolder_wpRestoreString */
#endif /* SOMGD_pmc_WPFolder_wpRestoreString */
#ifndef parent_wpRestoreString
     #define parent_wpRestoreString CandyFolder_parent_WPFolder_wpRestoreString
#endif  /* parent_wpRestoreString */
#define CandyFolder_parents_wpRestoreString(somSelf,pszClass,ulKey,pszValue,pcbValue) (\
   CandyFolder_parent_WPFolder_wpRestoreString(somSelf,pszClass,ulKey,pszValue,pcbValue))

/*
 * Overridden method: wpSetup
 */
#pragma linkage(candyfolder_wpSetup, system)
SOM_Scope BOOL  SOMLINK candyfolder_wpSetup(CandyFolder *somSelf,
		PSZ pszSetupString);
static char *somMN_CandyFolderwpSetup = "WPObject::wpSetup";
static somId somId_CandyFolderwpSetup = &somMN_CandyFolderwpSetup;
#ifdef somId_wpSetup
#undef somId_wpSetup
#else
#define somId_wpSetup somId_CandyFolderwpSetup
#endif
static somMethodProc* CandyFolder_parent_WPFolder_wpSetup_resolved;
#define CandyFolder_parent_WPFolder_wpSetup(somSelf,pszSetupString) \
  ((( somTD_WPObject_wpSetup ) \
    CandyFolder_parent_WPFolder_wpSetup_resolved) \
	 (somSelf,pszSetupString))
#ifndef SOMGD_pmc_WPFolder_wpSetup
  #ifdef parent_WPFolder_wpSetup
     #undef parent_WPFolder_wpSetup
     #define SOMGD_pmc_WPFolder_wpSetup 1
  #else
     #define parent_WPFolder_wpSetup CandyFolder_parent_WPFolder_wpSetup
  #endif /* parent_WPFolder_wpSetup */
#endif /* SOMGD_pmc_WPFolder_wpSetup */
#ifndef parent_wpSetup
     #define parent_wpSetup CandyFolder_parent_WPFolder_wpSetup
#endif  /* parent_wpSetup */
#define CandyFolder_parents_wpSetup(somSelf,pszSetupString) (\
   CandyFolder_parent_WPFolder_wpSetup(somSelf,pszSetupString))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct CandyFolderClassDataStructure SOMDLINK CandyFolderClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct CandyFolderCClassDataStructure SOMDLINK CandyFolderCClassData = {(somMethodTabs) NULL};

/*
 * New Method: cfRefreshContainerBackgrounds
 */
#pragma linkage(candyfolder_cfRefreshContainerBackgrounds, system)
SOM_Scope void  SOMLINK candyfolder_cfRefreshContainerBackgrounds(CandyFolder *somSelf,
		BOOL bColorChange);
#ifndef somMN_cfRefreshContainerBackgrounds_defined
#define somMN_cfRefreshContainerBackgrounds_defined
static char *somMN_cfRefreshContainerBackgrounds = "cfRefreshContainerBackgrounds";
static somId somId_cfRefreshContainerBackgrounds = &somMN_cfRefreshContainerBackgrounds;
#endif  /* somMN_cfRefreshContainerBackgrounds_defined */
#ifndef somDS_cfRefreshContainerBackgrounds_defined
#define somDS_cfRefreshContainerBackgrounds_defined
static char *somDS_cfRefreshContainerBackgrounds = "::CandyFolder::cfRefreshContainerBackgrounds";
static somId somDI_cfRefreshContainerBackgrounds = &somDS_cfRefreshContainerBackgrounds;
#endif  /* somDS_cfRefreshContainerBackgrounds_defined */
#define cfRefreshContainerBackgrounds_somApRdDefault

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t CandyFolderSM[] = {
    {    &CandyFolderClassData.cfRefreshContainerBackgrounds,
         &somId_cfRefreshContainerBackgrounds,
         &somDI_cfRefreshContainerBackgrounds,
         (somMethodProc *) candyfolder_cfRefreshContainerBackgrounds,
         (somMethodProc *)((void*)-1),
#ifdef cfRefreshContainerBackgrounds_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&cfRefreshContainerBackgroundsStubs) },
#endif
};


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t CandyFolderOM[] = {
    {    &somId_CandyFolderwpAddFolderBackgroundPage,
         (somMethodProc *) candyfolder_wpAddFolderBackgroundPage    },
    {    &somId_CandyFolderwpOpen,
         (somMethodProc *) candyfolder_wpOpen    },
    {    &somId_CandyFolderwpDeleteFromObjUseList,
         (somMethodProc *) candyfolder_wpDeleteFromObjUseList    },
    {    &somId_CandyFolderwpSaveState,
         (somMethodProc *) candyfolder_wpSaveState    },
    {    &somId_CandyFolderwpRestoreState,
         (somMethodProc *) candyfolder_wpRestoreState    },
    {    &somId_CandyFolderwpSaveString,
         (somMethodProc *) candyfolder_wpSaveString    },
    {    &somId_CandyFolderwpRestoreString,
         (somMethodProc *) candyfolder_wpRestoreString    },
    {    &somId_CandyFolderwpSetup,
         (somMethodProc *) candyfolder_wpSetup    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_CandyFolder = "CandyFolder";
#ifndef somEMC_M_CandyFolder_defined
#define somEMC_M_CandyFolder_defined
static char * somEMC_M_CandyFolder = "M_CandyFolder";
#endif
static char * somPCN_CandyFolder_WPFolder = "WPFolder";

static somId somPCCandyFolder[] = {
    &somPCN_CandyFolder_WPFolder,
};

static somStaticClassInfo CandyFolderSCI = {
    4, 1, 8, 0, 0, 0,
    CandyFolder_MajorVersion, CandyFolder_MinorVersion,
    sizeof(CandyFolderData), CandyFolder_MaxNoMethods, 1,
    &somCN_CandyFolder,
    &somEMC_M_CandyFolder, 0,
    somPCCandyFolder,
    (somClassDataStructure *) &CandyFolderClassData,
    (somCClassDataStructure *) &CandyFolderCClassData,
    CandyFolderSM, CandyFolderOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    4, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    1, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK CandyFolderNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    WPFolderNewClass(WPFolder_MajorVersion,WPFolder_MinorVersion);	/* static reference */
    /* Explicit metaclass, so get it */ 
    M_CandyFolderNewClass(M_CandyFolder_MajorVersion,M_CandyFolder_MinorVersion);	/* static reference */
    result = somBuildClass(1,&CandyFolderSCI, somtmajorVersion, somtminorVersion);
    CandyFolder_parent_WPFolder_wpSetup_resolved = 
	somParentNumResolve(CandyFolderCClassData.parentMtab, 1, WPObjectClassData.wpSetup); 
    CandyFolder_parent_WPFolder_wpRestoreString_resolved = 
	somParentNumResolve(CandyFolderCClassData.parentMtab, 1, WPObjectClassData.wpRestoreString); 
    CandyFolder_parent_WPFolder_wpSaveString_resolved = 
	somParentNumResolve(CandyFolderCClassData.parentMtab, 1, WPObjectClassData.wpSaveString); 
    CandyFolder_parent_WPFolder_wpRestoreState_resolved = 
	somParentNumResolve(CandyFolderCClassData.parentMtab, 1, WPObjectClassData.wpRestoreState); 
    CandyFolder_parent_WPFolder_wpSaveState_resolved = 
	somParentNumResolve(CandyFolderCClassData.parentMtab, 1, WPObjectClassData.wpSaveState); 
    CandyFolder_parent_WPFolder_wpDeleteFromObjUseList_resolved = 
	somParentNumResolve(CandyFolderCClassData.parentMtab, 1, WPObjectClassData.wpDeleteFromObjUseList); 
    CandyFolder_parent_WPFolder_wpOpen_resolved = 
	somParentNumResolve(CandyFolderCClassData.parentMtab, 1, WPObjectClassData.wpOpen); 
    CandyFolder_parent_WPFolder_wpAddFolderBackgroundPage_resolved = 
	somParentNumResolve(CandyFolderCClassData.parentMtab, 1, WPFolderClassData.wpAddFolderBackgroundPage); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_CandyFolder_ih */

/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_M_CandyFolder_ih
#define SOM_M_CandyFolder_ih

#pragma checkout(suspend)

#include <candyfld.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass M_CandyFolderCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define M_CandyFolder_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef void M_CandyFolderData;

/*
 * This class introduces no instance data, so no GetData macro is provided
 */

/*
 * Primary Implementation File Support
 */
#if (defined(CandyFolder_Class_Source) || defined(M_CandyFolder_Class_Source) || defined(SOM_Module_candyfld_Source))

/*
 * Trace/Debug macro
 */
#ifndef M_CandyFolderMethodDebug
   #define M_CandyFolderMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* M_CandyFolderMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Overridden method: wpclsQueryTitle
 */
#pragma linkage(candyfolderM_wpclsQueryTitle, system)
SOM_Scope PSZ  SOMLINK candyfolderM_wpclsQueryTitle(M_CandyFolder *somSelf);
static char *somMN_M_CandyFolderwpclsQueryTitle = "M_WPObject::wpclsQueryTitle";
static somId somId_M_CandyFolderwpclsQueryTitle = &somMN_M_CandyFolderwpclsQueryTitle;
#ifdef somId_wpclsQueryTitle
#undef somId_wpclsQueryTitle
#else
#define somId_wpclsQueryTitle somId_M_CandyFolderwpclsQueryTitle
#endif
static somMethodProc* M_CandyFolder_parent_M_WPFolder_wpclsQueryTitle_resolved;
#define M_CandyFolder_parent_M_WPFolder_wpclsQueryTitle(somSelf) \
  ((( somTD_M_WPObject_wpclsQueryTitle ) \
    M_CandyFolder_parent_M_WPFolder_wpclsQueryTitle_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPFolder_wpclsQueryTitle
  #ifdef parent_M_WPFolder_wpclsQueryTitle
     #undef parent_M_WPFolder_wpclsQueryTitle
     #define SOMGD_pmc_M_WPFolder_wpclsQueryTitle 1
  #else
     #define parent_M_WPFolder_wpclsQueryTitle M_CandyFolder_parent_M_WPFolder_wpclsQueryTitle
  #endif /* parent_M_WPFolder_wpclsQueryTitle */
#endif /* SOMGD_pmc_M_WPFolder_wpclsQueryTitle */
#ifndef parent_wpclsQueryTitle
     #define parent_wpclsQueryTitle M_CandyFolder_parent_M_WPFolder_wpclsQueryTitle
#endif  /* parent_wpclsQueryTitle */
#define M_CandyFolder_parents_wpclsQueryTitle(somSelf) (\
   M_CandyFolder_parent_M_WPFolder_wpclsQueryTitle(somSelf))

/*
 * Overridden method: wpclsQueryStyle
 */
#pragma linkage(candyfolderM_wpclsQueryStyle, system)
SOM_Scope ULONG  SOMLINK candyfolderM_wpclsQueryStyle(M_CandyFolder *somSelf);
static char *somMN_M_CandyFolderwpclsQueryStyle = "M_WPObject::wpclsQueryStyle";
static somId somId_M_CandyFolderwpclsQueryStyle = &somMN_M_CandyFolderwpclsQueryStyle;
#ifdef somId_wpclsQueryStyle
#undef somId_wpclsQueryStyle
#else
#define somId_wpclsQueryStyle somId_M_CandyFolderwpclsQueryStyle
#endif
static somMethodProc* M_CandyFolder_parent_M_WPFolder_wpclsQueryStyle_resolved;
#define M_CandyFolder_parent_M_WPFolder_wpclsQueryStyle(somSelf) \
  ((( somTD_M_WPObject_wpclsQueryStyle ) \
    M_CandyFolder_parent_M_WPFolder_wpclsQueryStyle_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPFolder_wpclsQueryStyle
  #ifdef parent_M_WPFolder_wpclsQueryStyle
     #undef parent_M_WPFolder_wpclsQueryStyle
     #define SOMGD_pmc_M_WPFolder_wpclsQueryStyle 1
  #else
     #define parent_M_WPFolder_wpclsQueryStyle M_CandyFolder_parent_M_WPFolder_wpclsQueryStyle
  #endif /* parent_M_WPFolder_wpclsQueryStyle */
#endif /* SOMGD_pmc_M_WPFolder_wpclsQueryStyle */
#ifndef parent_wpclsQueryStyle
     #define parent_wpclsQueryStyle M_CandyFolder_parent_M_WPFolder_wpclsQueryStyle
#endif  /* parent_wpclsQueryStyle */
#define M_CandyFolder_parents_wpclsQueryStyle(somSelf) (\
   M_CandyFolder_parent_M_WPFolder_wpclsQueryStyle(somSelf))

/*
 * Overridden method: wpclsUnInitData
 */
#pragma linkage(candyfolderM_wpclsUnInitData, system)
SOM_Scope void  SOMLINK candyfolderM_wpclsUnInitData(M_CandyFolder *somSelf);
static char *somMN_M_CandyFolderwpclsUnInitData = "M_WPObject::wpclsUnInitData";
static somId somId_M_CandyFolderwpclsUnInitData = &somMN_M_CandyFolderwpclsUnInitData;
#ifdef somId_wpclsUnInitData
#undef somId_wpclsUnInitData
#else
#define somId_wpclsUnInitData somId_M_CandyFolderwpclsUnInitData
#endif
static somMethodProc* M_CandyFolder_parent_M_WPFolder_wpclsUnInitData_resolved;
#define M_CandyFolder_parent_M_WPFolder_wpclsUnInitData(somSelf) \
  ((( somTD_M_WPObject_wpclsUnInitData ) \
    M_CandyFolder_parent_M_WPFolder_wpclsUnInitData_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPFolder_wpclsUnInitData
  #ifdef parent_M_WPFolder_wpclsUnInitData
     #undef parent_M_WPFolder_wpclsUnInitData
     #define SOMGD_pmc_M_WPFolder_wpclsUnInitData 1
  #else
     #define parent_M_WPFolder_wpclsUnInitData M_CandyFolder_parent_M_WPFolder_wpclsUnInitData
  #endif /* parent_M_WPFolder_wpclsUnInitData */
#endif /* SOMGD_pmc_M_WPFolder_wpclsUnInitData */
#ifndef parent_wpclsUnInitData
     #define parent_wpclsUnInitData M_CandyFolder_parent_M_WPFolder_wpclsUnInitData
#endif  /* parent_wpclsUnInitData */
#define M_CandyFolder_parents_wpclsUnInitData(somSelf) (\
   M_CandyFolder_parent_M_WPFolder_wpclsUnInitData(somSelf))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct M_CandyFolderClassDataStructure SOMDLINK M_CandyFolderClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct M_CandyFolderCClassDataStructure SOMDLINK M_CandyFolderCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_CandyFolderOM[] = {
    {    &somId_M_CandyFolderwpclsQueryTitle,
         (somMethodProc *) candyfolderM_wpclsQueryTitle    },
    {    &somId_M_CandyFolderwpclsQueryStyle,
         (somMethodProc *) candyfolderM_wpclsQueryStyle    },
    {    &somId_M_CandyFolderwpclsUnInitData,
         (somMethodProc *) candyfolderM_wpclsUnInitData    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_M_CandyFolder = "M_CandyFolder";
static char * somPCN_M_CandyFolder_M_WPFolder = "M_WPFolder";

static somId somPCM_CandyFolder[] = {
    &somPCN_M_CandyFolder_M_WPFolder,
};

static somStaticClassInfo M_CandyFolderSCI = {
    4, 0, 3, 0, 0, 0,
    M_CandyFolder_MajorVersion, M_CandyFolder_MinorVersion,
    0, M_CandyFolder_MaxNoMethods, 1,
    &somCN_M_CandyFolder,
    (somId) NULL, 1,
    somPCM_CandyFolder,
    (somClassDataStructure *) &M_CandyFolderClassData,
    (somCClassDataStructure *) &M_CandyFolderCClassData,
    (somStaticMethod_t *) NULL, M_CandyFolderOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK M_CandyFolderNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    M_WPFolderNewClass(M_WPFolder_MajorVersion,M_WPFolder_MinorVersion);	/* static reference */
    result = somBuildClass(1,&M_CandyFolderSCI, somtmajorVersion, somtminorVersion);
    M_CandyFolder_parent_M_WPFolder_wpclsUnInitData_resolved = 
	somParentNumResolve(M_CandyFolderCClassData.parentMtab, 1, M_WPObjectClassData.wpclsUnInitData); 
    M_CandyFolder_parent_M_WPFolder_wpclsQueryStyle_resolved = 
	somParentNumResolve(M_CandyFolderCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryStyle); 
    M_CandyFolder_parent_M_WPFolder_wpclsQueryTitle_resolved = 
	somParentNumResolve(M_CandyFolderCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryTitle); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_M_CandyFolder_ih */
